name: 'Windows MSYS2'

on:
  push:
    branches:
      - main
    paths:
      - '!docs/**'
      - '!.github/workflows/**'
      - '.github/workflows/Windows-MSYS2.yml'
  pull_request:

jobs:
  build:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - { icon: 'üü®', sys: mingw32, env: i686, name: MINGW32, compiler: gcc }
          - { icon: 'üü¶', sys: mingw64, env: x86_64, name: MINGW64, compiler: gcc  }
          - { icon: 'üü©', sys: ucrt64,  env: ucrt-x86_64, name: UCRT64, compiler: gcc  }
          - { icon: 'üü•', sys: clang64, env: clang-x86_64, name: Clang64, compiler: clang  }
          #- { icon: 'üü™', sys: clang32, env: clang-i686, name: Clang32, compiler: clang  }

    name: 'üöß ${{ matrix.icon }} ${{ matrix.name }}'
    defaults:
      run:
        shell: msys2 {0}

    steps:

      - name: 'üß∞ Checkout'
        uses: actions/checkout@v3

      - name: 'üì• Load .env file'
        if: hashFiles('.github/workflows/.env') != ''
        uses: xom9ikk/dotenv@v1.0.2
        with:
          path: .github/workflows

      - name: '${{ matrix.icon }} Setup MSYS2'
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{matrix.sys}}
          path-type: minimal
          release: true
          update: true
          install: >-
            mingw-w64-${{matrix.env}}-ninja
            mingw-w64-${{matrix.env}}-cmake
            mingw-w64-${{matrix.env}}-${{matrix.compiler}}
            ${{env.INSTALL_PACKAGES}}

      - name: 'üîß Configure'
        run: cmake -S . -B ${{ env.CMAKE_BUILD_PREFIX }} -D CMAKE_BUILD_TYPE=${{ env.CMAKE_BUILD_TYPE }}  -DBUILD_TESTS=${{ env.BUILD_TESTS }} -DBUILD_DOCS=${{ env.BUILD_DOCS }} -DBUILD_EXAMPLES=${{ env.BUILD_EXAMPLES }}

      - name: '‚öôÔ∏è Build'
        run: cmake --build ${{ env.CMAKE_BUILD_PREFIX }} --config ${{ env.CMAKE_BUILD_TYPE }} --parallel ${{ env.CMAKE_NUMBER_JOBS }}

      - name: 'üß™ Run tests'
        working-directory: ${{ env.CMAKE_BUILD_PREFIX }}
        run: ctest -C ${{ env.CMAKE_BUILD_TYPE }} --parallel ${{ env.CMAKE_NUMBER_JOBS_TESTS }} -VV --output-on-failure
