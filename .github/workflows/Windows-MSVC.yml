name: 'Windows MSVC'

on:
  push:
    branches:
      - main
    paths:
      - '!docs/**'
      - '!.github/workflows/**'
      - '.github/workflows/Windows-MSVC.yml'
  pull_request:

jobs:
  build:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - { icon: 'üü®', env: Win32}
          - { icon: 'üü¶', env: x64}
          #- { icon: 'üü©', env: amd64_arm}
          #- { icon: 'üü•', env: amd64_arm64}
    name: 'üöß ${{ matrix.icon }} ${{ matrix.env }}'

    steps:

      - name: 'üß∞ Checkout'
        uses: actions/checkout@v4

      - name: 'üì• Load .env file'
        if: hashFiles('.github/workflows/.env') != ''
        uses: xom9ikk/dotenv@v2
        with:
          path: .github/workflows

      - name: '${{ matrix.icon }} Setup CMake'
        uses: jwlawson/actions-setup-cmake@v1.13
        with:
          cmake-version: '${{env.CMAKE_VERSION}}'
          github-api-token: ${{ secrets.GITHUB_TOKEN }}

      - name: '${{ matrix.icon }} Setup Visual Studio'
        uses: ilammy/msvc-dev-cmd@v1.12.1
        with:
          arch: ${{ matrix.env }}

      - name: '${{ matrix.icon }} Install package'
        if: ${{ env.INSTALL_PACKAGES != '' }}
        run: choco install ${{env.INSTALL_PACKAGES}}

      - name: 'üîß Configure'
        run: cmake -S ${{ github.workspace }} -B ${{ env.CMAKE_BUILD_PREFIX }} -DBUILD_TESTS=${{ env.BUILD_TESTS }} -DBUILD_DOCS=${{ env.BUILD_DOCS }} -DBUILD_EXAMPLES=${{ env.BUILD_EXAMPLES }}

      - name: '‚öôÔ∏è Build'
        run: cmake --build ${{ env.CMAKE_BUILD_PREFIX }} --config ${{ env.CMAKE_BUILD_TYPE }} --parallel ${{ env.CMAKE_NUMBER_JOBS }}

      - name: 'üß™ Run tests'
        if: ${{ matrix.env != 'amd64_arm' && matrix.env != 'amd64_arm64' }}
        working-directory: ${{ env.CMAKE_BUILD_PREFIX }}
        run: ctest -C ${{ env.CMAKE_BUILD_TYPE }} --parallel ${{ env.CMAKE_NUMBER_JOBS_TESTS }} -VV --output-on-failure
