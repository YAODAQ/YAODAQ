name: 'docs'

on:
  push:
    branches:
      - main
    paths:
    - '!docs/**'
    - '!.github/workflows/**'
    - '.github/workflows/Docs.yml'
  pull_request:
    branches:
      - main
    paths:
    - '!docs/**'
    - '!.github/workflows/**'
    - '.github/workflows/Docs.yml'

env:
  CMAKE_VERSION: '3.16.x'
  CMAKE_BUILD_TYPE: 'Release'
  CMAKE_BUILD_PREFIX: './build'
  CMAKE_INSTALL_PREFIX: './install'

jobs:
  docs:
    runs-on: ubuntu-latest
    name: 'üìö Docs'

    steps:

      - name: 'üß∞ Checkout'
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: 'üêç Install packages'
        run: sudo apt-get install dia mscgen inkscape

      - name: 'üêç Install micromamba'
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            wget -qO- https://micromamba.snakepit.net/api/micromamba/linux-64/latest | tar -xvj bin/micromamba --strip-components=1
          else
            wget -qO- https://micromamba.snakepit.net/api/micromamba/osx-64/latest | tar -xvj bin/micromamba
            mv bin/micromamba ./micromamba
          fi
          ./micromamba shell init -s bash -p ~/micromamba
          mkdir -p ~/micromamba/pkgs/

      - name: 'üêç Setup micromamba'
        shell: bash -l {0}
        run: |
          export MAMBA_ROOT_PREFIX=~/micromamba
          export MAMBA_EXE=$(pwd)/micromamba
          . $MAMBA_ROOT_PREFIX/etc/profile.d/mamba.sh
          micromamba activate
          micromamba install python doxygen graphviz -c conda-forge

      - name: 'üü® Install miktex'
        run: |
          sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys D6BC243565B2087BC3F897C9277A7293F59E4889
          echo "deb http://miktex.org/download/ubuntu focal universe" | sudo tee /etc/apt/sources.list.d/miktex.list
          sudo apt-get update
          sudo apt-get install miktex
          sudo miktexsetup --shared=yes finish
          sudo initexmf --admin --set-config-value [MPM]AutoInstall=1

      - name: 'üü® Setup CMake'
        uses: jwlawson/actions-setup-cmake@v1.12
        with:
          cmake-version: '${{env.CMAKE_VERSION}}'
          github-api-token: ${{ secrets.GITHUB_TOKEN }}

      - name: 'üîß Configure'
        run: cmake -S . -B ${{ env.CMAKE_BUILD_PREFIX }} -DCMAKE_BUILD_TYPE=${{ env.CMAKE_BUILD_TYPE }} -DBUILD_DOCS=ON

      - name: '‚öôÔ∏è Build'
        run: cmake --build ${{ env.CMAKE_BUILD_PREFIX }} --config ${{ env.CMAKE_BUILD_TYPE }} --parallel 2 --target all docs

      - name: 'üì• Install'
        run: cmake --install ${{ env.CMAKE_BUILD_PREFIX }} --prefix ${{ env.CMAKE_INSTALL_PREFIX }} --strip
          && mv ${{ env.CMAKE_INSTALL_PREFIX }}/share/doc/YAODAQ/pdf/YAODAQ_Manual.pdf ${{ env.CMAKE_INSTALL_PREFIX }}/share/doc/YAODAQ/html/YAODAQ_Manual.pdf

      - name: 'üéâ Deploy'
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          ACCESS_TOKEN: ${{ secrets.REPOS_ACCESS }}
          REPOSITORY_NAME: yaodaq/yaodaq.github.io
          BRANCH: main
          FOLDER: ${{ env.CMAKE_INSTALL_PREFIX }}/share/doc/YAODAQ/html/
          TARGET_FOLDER: YAODAQ
